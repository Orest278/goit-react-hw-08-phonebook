{"version":3,"file":"static/js/833.e3317b0d.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactIem.module.css?c14e","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactLlist.module.css?15de","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/style.module.css?457e"],"sourcesContent":["const selectFilter = state => state.contacts.filter;\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.contacts.error;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n};","// extracted by mini-css-extract-plugin\nexport default {\"btnAddContact\":\"ContactForm_btnAddContact__AepU1\",\"fomSubmit\":\"ContactForm_fomSubmit__8g89g\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport s from './ContactForm.module.css'\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    const name = e.target.elements.name.value;\n    if (contacts.find(el => el.name === name)) {\n      alert(name + ' already exists in the phone book');\n      e.target.reset();\n      return;\n    }\n    const number = e.target.elements.number.value;\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n    e.target.reset();\n  };\n\n  return (\n    <form className={s.fomSubmit} onSubmit={handlerSubmit}>\n      <label htmlFor=\"name\">Name </label>\n      <input\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label htmlFor=\"tel\">Number </label>\n      <input\n        id=\"tel\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <br />\n      <button className={s.btnAddContact} type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDelete\":\"ContactIem_btnDelete__d47NK\",\"lineContact\":\"ContactIem_lineContact__vSsEK\"};","import { deleteContact } from '../../redux/operations';\nimport s from './ContactIem.module.css'\n\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nfunction ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const onDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={s.lineContact}>\n      <p>\n        {name}: {number}\n      </p>\n      <button className={s.btnDelete} onClick={onDelete}>Delete</button>\n    </li>\n  );\n}\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"listContact\":\"ContactLlist_listContact__mwd+J\"};","import ContactItem from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/selectors';\nimport s from './ContactLlist.module.css'\n\nfunction ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  \n\n  return (\n    <ul className={s.listContact}>\n      {visibleContacts.map(({ name, id, number }) => (\n        <ContactItem id={id} key={id}  name={name} number={number}/>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const handlerChangeFilter = e => {\n    dispatch(setFilter(e.target.value.toLowerCase().trim()));\n  };\n  return (\n    <>\n      <label htmlFor=\"filter\"></label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contacts by name\"\n        onChange={handlerChangeFilter}\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations'; \nimport { selectIsLoading } from 'redux/selectors'; \nimport s from './style.module.css'\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={s.phonebookContacts}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && <p>Loading...</p>}\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"registerDiv\":\"style_registerDiv__Yy86g\",\"registerForm\":\"style_registerForm__lJS8A\",\"registerLabel\":\"style_registerLabel__S1tTU\",\"register\":\"style_register__xxAbz\",\"Home\":\"style_Home__ZCpSq\",\"phonebookContacts\":\"style_phonebookContacts__Rgnvb\"};"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","filter","selectFilter","name","toLowerCase","includes","dispatch","useDispatch","useSelector","className","s","onSubmit","e","preventDefault","target","elements","value","find","el","alert","reset","number","newContact","id","nanoid","addContact","htmlFor","type","pattern","title","required","onClick","deleteContact","visibleContacts","map","placeholder","onChange","setFilter","trim","Contacts","useEffect","fetchContacts"],"sourceRoot":""}